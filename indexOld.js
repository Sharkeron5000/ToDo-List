// –ü—Ä–∏–º–µ—Ä –∑–∞–¥–∞—á.
const JS = [[
  { completedToDo: false, textToDo: '–°–ø–∏—Å–æ–∫ 1' }, { completedToDo: true, textToDo: '–ó–∞–¥–∞—á–∞ 1' }, { completedToDo: false, textToDo: '–ó–∞–¥–∞—á–∞ 2' }
],
[
  { completedToDo: true, textToDo: '–°–ø–∏—Å–æ–∫ 2' }, { completedToDo: true, textToDo: '–ó–∞–¥–∞—á–∞ 1' }, { completedToDo: true, textToDo: '–ó–∞–¥–∞—á–∞ 2' }
]]
// localStorage.setItem('toDo', JSON.stringify(JS));

// –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø–æ–ª–Ω–∏—Ç—Å—è —Å localStorage
const toDoList = [];

// –î–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ—Å—Ç–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á.
const toDo = document.createElement('div');
toDo.classList.add('to-do-list');
document.body.appendChild(toDo);

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏
const panel = document.createElement('div');
panel.classList.add('panel-control');

// –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—â–µ–π –∑–∞–¥–∞—á–∏
const buttonAdd = document.createElement('button');
buttonAdd.textContent = '‚ûï';
buttonAdd.addEventListener('click', () => { createToDo() });
panel.appendChild(buttonAdd);

// –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
const buttonDelete = document.createElement('button');
buttonDelete.textContent = 'üóë';
buttonDelete.addEventListener('click', () => { deleteToDo() });
panel.appendChild(buttonDelete);

// –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞—á.
const buttonClear = document.createElement('button');
buttonClear.textContent = '‚ùå';
buttonClear.addEventListener('click', () => { clearAllToDo() });
panel.appendChild(buttonClear);
document.body.appendChild(panel);

load();

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –≤ localStorage
function save() {
  localStorage.setItem('toDo', JSON.stringify(toDoList));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–¥–∞—á c localStorage
function load() {
  const data = JSON.parse(localStorage.getItem('toDo') || '[]');
  toDoList.splice(0, toDoList.length, ...data);
  renderToDoList();
  console.log(data); // –í–†–ï–ú–ï–ù–ù–û
}

// –í—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–¥–∞—á –Ω–∞ —ç–∫—Ä–∞–Ω
function renderToDoList() {
  toDo.textContent = '';
  let toDoNumberCompleted = ``;
  toDoList.forEach((elemToDo, idxToDo) => {
    // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è –∑–∞–¥–∞—á–∏
    const divElement = document.createElement('div');
    divElement.classList.add('to-do');
    // –ú–µ—Å—Ç–æ –¥–ª—è –ø–æ–¥–∑–∞–¥–∞—á
    const placeUl = document.createElement('ul');
    placeUl.id = idxToDo;
    elemToDo.forEach((elem, idx, arr) => {
      console.log(elem, idx, arr);
      // –ö–Ω–æ–ø–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      const inputCheck = document.createElement('input');
      inputCheck.type = 'checkbox';
      inputCheck.checked = elem.completedToDo;
      inputCheck.addEventListener('input', () => { check(idxToDo, idx, inputCheck.checked) });
      // Title
      const nameHeaderToDo = document.createElement('div');
      if(!idx) {
        arr.filter((elem) => {
          console.log(elem);
        })
        toDoNumberCompleted = `${2}/${arr.length - 1}`
        nameHeaderToDo.textContent = `${elem.textToDo} ${toDoNumberCompleted}`;
      } else {
        nameHeaderToDo.textContent = elem.textToDo;
      }
      nameHeaderToDo.title = elem.textToDo;
      // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
      const buttonAddToDo = document.createElement('button');
      buttonAddToDo.textContent = '‚ûï';
      buttonAddToDo.addEventListener('click', () => { createToDo(idxToDo) })
      //–ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Title —É –∑–∞–≥–æ–ª–æ–≤–∫–∞
      const buttonEditTitle = document.createElement('button');
      buttonEditTitle.textContent = '‚úè';
      buttonEditTitle.addEventListener('click', () => { edit(idxToDo, idx) });
      // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      const buttonDeleteToDo = document.createElement('button');
      buttonDeleteToDo.textContent = 'üóë';
      buttonDeleteToDo.addEventListener('click', () => { deleteToDo(idxToDo, idx) })
      // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ –∑–∞–¥–∞—á —É –∑–∞–≥–æ–ª–æ–≤–∫–∞
      const buttonShowToDo = document.createElement('button');
      buttonShowToDo.textContent = 'üîª';
      buttonShowToDo.addEventListener('click', () => { showToDo(idxToDo) })
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
      if (!idx) {
        toDo.appendChild(inputCheck);
        toDo.appendChild(nameHeaderToDo);
        toDo.appendChild(buttonAddToDo);
        toDo.appendChild(buttonEditTitle);
        toDo.appendChild(buttonDeleteToDo);
        toDo.appendChild(buttonShowToDo);
        toDo.appendChild(placeUl);
      }
      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∑–∞–¥–∞—á
      if (idx) {
        const liToDo = document.createElement('li');
        liToDo.appendChild(inputCheck);
        liToDo.appendChild(nameHeaderToDo);
        liToDo.appendChild(buttonEditTitle);
        liToDo.appendChild(buttonDeleteToDo);
        placeUl.appendChild(liToDo);
      }

    })
  })
}

// –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–æ–∫
function clearAllToDo() {
  localStorage.clear();
  load();
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–¥–∞—á
function check(idxToDo, idx, check) {
  toDoList[idxToDo][idx].completedToDo = check;
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏/–Ω–µ–≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–¥–∑–∞–¥–∞—á
  if (idx === 0) {
    toDoList[idxToDo].forEach(i => i.completedToDo = check)
  }
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∑–∞–¥–∞—á –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏/–Ω–µ–≥–æ—Ç–æ–≤–∫–∏ —É –∑–∞–≥–æ–ª–æ–≤–∫–∞
  if (idx !== 0) {
    toDoList[idxToDo][0].completedToDo = toDoList[idxToDo].every((i, idx) => {
      if(!idx) return true;
      return i.completedToDo;
    })
  }
  save();
  renderToDoList()
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏  –ø–æ–¥–∑–∞–¥–∞—á–∏
function createToDo(idxToDo) {
  const item = {
    completedToDo: false,
    textToDo: ''
  };

  if(!arguments.length){
    toDoList.push([item]);
    edit(toDoList.length - 1, 0);
  }
  if(arguments.length){
    toDoList[idxToDo].push(item);
    edit(idxToDo,toDoList[idxToDo].length-1);
  }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Title —É –∑–∞–¥–∞—á
function edit(idxToDo, idx) {
  toDoList[idxToDo][idx].textToDo = prompt('–í–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É', toDoList[idxToDo][idx].textToDo);
  save();
  renderToDoList();
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –ø–æ–¥–∑–∞–¥–∞—á
function deleteToDo(idxToDo, idx) {
  if(!arguments.length) toDoList.splice(0, toDoList.length, ...toDoList.filter(elem => !elem[0].completedToDo));
  if(!idx) toDoList.splice(idxToDo, 1);
  if(idx) toDoList[idxToDo].splice(idx, 1);
  save();
  renderToDoList();
}

// –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–æ–¥–∑–∞–¥–∞—á–∏
function showToDo(idxToDo) {
  document.getElementById(idxToDo).classList.toggle('show');
}